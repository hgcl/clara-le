---
title: Colophon
description: Behind the scenes of this static website, built with Eleventy
icon: /public/img/meta/drawing-tool.svg
---

{% extends "layout/base.njk" %} 

{% block article %}
<article class="center h-entry">
  <div class="e-content">
  {% include 'post-header.njk' %}
    <h2>Behind the scenes</h2>
  <ul>
    <li>
      I built this website with the Eleventy static site generator.
    </li>
    <li>It is hosted on Cloudflare.</li>
    <li>
      The code is publicly available on
      <a href="https://github.com/hgcl/clara-le">GitHub</a>.
    </li>
    <li>There is no tracking of any kind. Just fun!</li>
    <li>This page uses a <a href="https://en.wikipedia.org/wiki/Progressive_enhancement">progressive enhancement approach</a> (HTML and CSS first) for better accessibility and performance. Please get back to me if you notice any accessibility issue!</li>
    <li>
      My browser of choice is Mozilla Firefox and I only test this website on it. Sorry if it aesthetically breaks on anything else.
    </li>
    <li>
      Everything about this website is overengineered.
    </li>
    <li>
      I am trying to reduce the ecological footprint of this website bit by bit, avoiding custom fonts and using media files in a mindful way.
    </li>
    <li id="timing">If you want to see the CO2 impact of this page, enable JavaScript to calculate it here.</li id="timing">
  </ul>
  <h2>Sitemap</h2>
  <p>I have a loose approach to creating and deleting pages on this website, so I'd understand if you get confused. Here's a look at the whole sitemap (not including the individual posts).</p>
  <ul>
    {% for item in navigationLinks %}
    <li>
      <a href="{{ item.url }}"
        >{{ item.title }}</a
      >
    </li>
    {% endfor %}
  </ul>
  </div>
</article>
{% endblock %}

{% block script %}
<script>
  window.addEventListener("load", function () {
    const now = new Date().getTime();
    const loadingTime = now - performance.timing.navigationStart;
    const transferredBytes = performance
      .getEntries()
      .map((entry) => entry.transferSize || 0) // we omit missing sizes like in paint perf entries
      .reduce((a, b) => a + b, 0);
    /**
     * Calculating digital emissions in g CO2e
     * https://sustainablewebdesign.org/calculating-digital-emissions/
     */
    const transferredGigabytes = transferredBytes / 1000000000;
    const emissions = transferredGigabytes * 0.81 * 442;

    const perfElement = document.getElementById("timing");
    perfElement.innerText = `In numbers, this page loaded ${(transferredBytes / 1000).toFixed(
      2
    )} kB in ${(loadingTime / 1000).toFixed(2)} s and emitted ${emissions.toFixed(
      2
    )} g CO2e. (Reload page to reset numbers.)`;
  });
</script>
{% endblock %}