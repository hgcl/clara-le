{% extends "layout/base.njk" %}

{% block head %}
{# COMMENT STYLES #}
<style>
  .ohsomehoney {
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    height: 0;
    width: 0;
    z-index: -1;
  }
  .boxed-content {
    text-align: center;
    font-size: var(--font-xs);
    background-color: var(--blue);
    color: var(--white);
    padding: var(--space-s) var(--space-l);
    margin-top: var(--space-3xl);
  }
  .boxed-content h2 {
    margin-top: 1rem;
  }
  .boxed-content > div {
    display: flex;
    flex-direction: column;
    text-align: left;
    margin-bottom: 1rem;
  }
  .boxed-content > div > * {
    width: 100%;
  }
  .boxed-content > button {
    margin: 1rem;
    border-color: var(--white);
    color: var(--white);
  }
  .boxed-content > button:hover,
  .boxed-content > button:focus {
    color: var(--blue);
  }

  /* Comments */
  #comments article {
    border-bottom: solid 1px var(--color-text-subtle);
    padding: 0.5rem 0;
  }
</style>
{% endblock %}

{% block article %}
{# TODO add article tag and e-content in a reusable wrapper, macro? #}
{# h-entry, e-content are microformats. Don't use for styling! #}
{# Microformats docs: https://microformats.org/wiki/h-entry #}
<article class="center h-entry">
  {% include 'post-header.njk' %}
  <div class="e-content">{{ content | safe | replace("{end-key}", "<span aria-hidden='true' style='font-size: 1.3rem; font-weight: bold; color: var(--color-accent);'>âŠ™</span>") }}</div>
</article>
{% if directory === "posts" %}
  {% include 'comment-form.njk' %}
  {% include 'comment-notes.njk' %}
{% endif %}
{% endblock %}

{% block script %}
<!-- FOOTNOTES TO SIDENOTES -->
<script>
  // Get footnotes box (ol element) and set up counter
  const footnotes = document.querySelector(".footnotes-list");
  let counter = 1;
  window.onload = () => {
    while (footnotes.childNodes.length >= counter) {
      // Generate ids numbers
      const footnoteId = "fn" + counter;
      const refId = "fnref" + counter;
      // Get footnote element (li element) + set class sidenote
      const footnoteEl = document.getElementById(footnoteId);
      // Get the reference sup element top position
      const supEl = document.getElementById(refId).parentNode;
      const topPos = supEl.offsetTop;
      // Vertically position footnote
      footnoteEl.style.top = topPos + "px";
      counter++;
    }
  };
</script>
  {% include 'comment-script.njk' %}
{% endblock %}