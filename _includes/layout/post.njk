{% extends "layout/base.njk" %}

{% block head %}
  <!-- Syntax highlighting -->
  <link rel="stylesheet" href="/public/styles/prism-okaidia.css" type="text/css" />
  <!-- Do not show comments for Now page (this condition is applied 3 times in this layout) -->
  {% if (directory === "posts") and (title !== "Now") %}
    <style>
      /* In-reply-to box */
      .post-header > .boxed-content {
        margin-top: 1rem;
      }

      /* COMMENT BOX */
      .ohsomehoney {
        opacity: 0;
        position: absolute;
        top: 0;
        left: 0;
        height: 0;
        width: 0;
        z-index: -1;
      }
      .boxed-content {
        background-color: var(--blue);
        color: var(--white);
        padding: var(--space-l) var(--space-m);
        font-size: var(--font-xs);
      }
      .boxed-content > *:last-child {
        /* avoid double margin */
        margin-bottom: 0;
      }
      .boxed-content a {
        /* avoid anchors disappearing because of default styles */
        color: var(--white);
      }
      .boxed-content a:hover {
        color: var(--blue);
      }
      .boxed-content h2 {
        text-align: center;
        /* cancels default margin */
        margin-top: 0;
      }
      .boxed-content #inputs > * {
        width: 100%;
        font-size: var(--font-xs);
      }
      .boxed-content #reply-to-parent {
        margin: 2rem 0;
      }
      .boxed-content #cancel-reply-button {
        padding: 0;
        /* Review colors on blue bg */
        color: var(--white);
      }
      .boxed-content > #submit-button {
        display: block;
        margin: 1rem auto 0;
        /* Review colors on blue bg */
        border-color: var(--white);
        color: var(--white);
      }
      /* Review links/buttons color on blue background */
      .boxed-content #cancel-reply-button:focus,
      .boxed-content #cancel-reply-button:hover,
      .boxed-content > #submit-button:focus,
      .boxed-content > #submit-button:hover {
        color: var(--blue);
      }

      /* CONTENT BODY */
      #content-body {
        margin-bottom: var(--space-5xl);
      }

      /* COMMENT LIST */
      #comments article, #webmentions article {
        border-bottom: solid 1px var(--color-text-subtle);
        padding: 1rem 0;
      }
      #comments article.reply-note {
        padding-left: 2rem;
      }
      #webmentions .webmention-icon {
        color: var(--color-accent);
        font-size: larger;
      }
    </style>
    <style media="only screen and (min-width: 768px)">
      /* Give more space to H1 when font-size becomes bigger */
      .post-header h1 {
        margin: 0 -3rem;
      }
    </style>
  {% endif %}
{% endblock %}

{% block article %}
  <!-- TODO add article tag and e-content in a reusable wrapper, macro? -->
  <!-- MICROFORMATS: h-entry, e-content are microformats. Don't use for styling! -->
  <!-- Microformats docs: https://microformats.org/wiki/h-entry -->
  <article id="content-body" class="center h-entry" lang="{{ lang }}"> 
    {% include 'post-header.njk' %}
    <div class="e-content">{{ content | safe | replace("--ENDCHAR--", "<span aria-hidden='true' style='font-size: 1.3rem; font-weight: bold; color: var(--color-accent);'>âŠ™</span>") }}</div>
  </article>
  {% if (directory === "posts") and (title !== "Now") %}
    {% include 'comment-form-disable.njk' %}
    {% include 'comment-list.njk' %}
  {% endif %}
{% endblock %}

{% block script %}
  <!-- FOOTNOTES TO SIDENOTES -->
  <script>
    // Get footnotes box (ol element) and set up counter
    const footnotes = document.querySelector(".footnotes-list");
    let counter = 1;
    window.onload = () => {
      while (footnotes.childNodes.length >= counter) { // Generate ids numbers
        const footnoteId = "fn" + counter;
        const refId = "fnref" + counter;
        // Get footnote element (li element) + set class sidenote
        const footnoteEl = document.getElementById(footnoteId);
        // Get the reference sup element top position
        const supEl = document.getElementById(refId).parentNode;
        const topPos = supEl.offsetTop;
        // Vertically position footnote
        footnoteEl.style.top = topPos + "px";
        counter++;
      }
    };
  </script>
{% endblock %}
