<script>
  // For the script to work, make sure the items container has the "filtered-list" class
  const allNotes = document.querySelectorAll(".filtered-list  >  *");
  const filterOneSelect = document.getElementById("filter-one-select");
  const filterTwoSelect = document.getElementById("filter-two-select");
  // remove no JS warning if javascript is enabled
  document.getElementById("notes-filter-js-warning").remove();

  // TODO clean up and simplify this script...

  /**
   * This function is called when a user changes the value of the select
   */
  function filterNotes(filterOne, filterTwo) {
    // Use filterOneSelect.value if nothing is specified when calling filterNotes()
    let filterOneValue = filterOneSelect.value;
    if (filterOne) {
      filterOneValue = filterOne;
    }

    // update URL onclick remove previous filter (hide all notes)
    allNotes.forEach((note) => (note.hidden = true));

    // Take into account "All" options
    let emptyFilterOne = false;
    if (filterOneValue == "") {
      emptyFilterOne = true;
    }

    /* There is only one filter */
    if (!filterTwoSelect) {
      // Update URL on filter select
      updateURL(filterOneValue);

      allNotes.forEach((note) => {
        if (isInArray(note, "data-tag", filterOneValue || emptyFilterOne)) {
          note.hidden = false;
        }
      });
    } else {
      /* There are two filters */
      let filterTwoValue = filterTwoSelect.value;
      if (filterTwo) {
        filterTwoValue = filterTwo;
      }

      // Update URL on filter select
      updateURL(filterOneValue, filterTwoValue);

      // Take into account "All" options for 2nd filter
      let emptyFilterTwo = false;
      if (filterTwoValue == "") {
        emptyFilterTwo = true;
      }

      // add hidden attributes to notes that don't have the chosen category in data-tag
      allNotes.forEach((note) => {
        // equals true if note includes filter 1
        const includesFilterOne = isInArray(note, "data-tag", filterOneValue);

        // equals true is note includes filter 2
        const includesFilterTwo = isInArray(
          note,
          "data-tag-two",
          filterTwoValue
        );

        if (filterTwoSelect && includesFilterOne && includesFilterTwo) {
          note.hidden = false;
        } else if (filterTwoSelect && emptyFilterOne && includesFilterTwo) {
          note.hidden = false;
        } else if (filterTwoSelect && includesFilterOne && emptyFilterTwo) {
          note.hidden = false;
        } else if (filterTwoSelect && emptyFilterOne && emptyFilterTwo) {
          note.hidden = false;
        }
      });
    }
  }

  // returns true if the 'array' selected under 'attribute' contains the 'value'
  function isInArray(array, attribute, value) {
    return array.getAttribute(attribute).split(",").includes(value);
  }

  // get current URL
  let currentUrl = new URL(window.location.href);
  const searchParams = new URLSearchParams(currentUrl.search);
  // apply URL filter to open page if specific filters are selected
  if (searchParams.get("q") && searchParams.get("r")) {
    filterNotes(searchParams.get("q"), searchParams.get("r"));
    // Set selector values
    filterOneSelect.value = searchParams.get("q");
    filterTwoSelect.value = searchParams.get("r");
  } else if (searchParams.get("q")) {
    filterNotes(searchParams.get("q"));
    filterOneSelect.value = searchParams.get("q");
  }

  // align selected category with URL
  function updateURL(filterOne, filterTwo) {
    currentUrl.searchParams.set("q", filterOne);
    if (filterTwo) {
      currentUrl.searchParams.set("r", filterTwo);
    }
    history.pushState({}, "", currentUrl);
  }
</script>
